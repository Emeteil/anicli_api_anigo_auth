name: CI

on:
  - push
  - pull_request
jobs:
  build:
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
          - windows-latest
        python-version:
          - "3.8"
          - "3.9"
          - "3.10"

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-python@v4
        id: python-setup
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          key: venv-${{ matrix.python-version }}-${{ runner.os }}-${{ hashFiles('poetry.lock') }}
          path: venv

      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --with dev

      - name: Run flake8
        run: poetry run flake8

      - name: Load cached .mypy_cache
        id: cached-mypy
        uses: actions/cache@v3
        with:
          key: mypy-${{ matrix.python-version }}-${{ runner.os }}
          path: .mypy_cache

      - name: Run mypy
        run: poetry run mypy anicli_api

      - name: Run tests
        run: poetry run pytest

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
